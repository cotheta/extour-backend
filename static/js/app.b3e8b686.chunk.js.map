{"version":3,"sources":["src/config/ApiKeys.js","web-build/register-service-worker.js","App.js","src/components/Login.js","src/components/Collections.js","src/components/Items.js","src/components/AddItem.js","src/components/Edit.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","firebase","initializeApp","apps","length","db","firestore","auth","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","Stack","createStackNavigator","LoginScreen","props","Login","navigation","View","style","styles","login","TextInput","textInput","placeholder","onChangeText","email","setState","secureTextEntry","password","button","Button","title","color","onPress","signInWithEmailAndPassword","state","navigate","log","message","test","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","this","options","headerStyle","headerTintColor","headerTitleStyle","fontWeight","CollectionsScreen","headerLeft","headerRight","flexDirection","marginRight","Text","marginTop","Ionicons","size","marginLeft","push","ItemsScreen","AntDesign","AddItem","EditItem","Component","text","marginBottom","fontSize","width","textAlign","borderWidth","borderRadius","skip","textDecorationLine","_collections","collection","SafeAreaView","FlatGrid","itemDimension","Dimensions","get","items","fixed","renderItem","item","TouchableHighlight","itemContainer","itemName","height","margin","fontFamily","_collection","myCollection","header","_doc","myItem","colNum","placesHeader","categoryHeader","_headers","_item","itemLength","i","headerContainer","key","numberOfLines","headerText","Object","keys","deleteProperty","allCategories","_allCategories","undefined","values","itemText","search","Image","source","uri","allPlaces","_allPlaces","substring","_header","FlatList","data","keyExtractor","id","extraData","unsubscribe","ref","onSnapshot","querySnapshot","forEach","doc","update","FieldValue","delete","alert","trig","forceUpdate","records","property","allRecords","route","params","charAt","len","count","_singleObj","singleObj","toLowerCase","set","merge","ScrollView","horizontal","borderLeftWidth","TouchableOpacity","activeOpacity","Icon","type","iconStyle","ListHeaderComponent","placeholderTextColor","onSubmitEditing","addProperty","borderTopWidth","_myItem","pickImage","async","ImagePicker","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","addCategory","_category","inputTitle","iconPick","show","inputText","onPressAdd","newItem","add","_count","_place","marginHorizontal","addPlace","addButton","marginVertical","padding","imagePick","borderStyle","num","deleteDoc","updateDoc","allItems","defaultValue","inputTextDsc"],"mappings":"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","file":"static/js/app.b3e8b686.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport '@firebase/firestore';\r\nimport { API_KEY, MAP_KEY } from 'react-native-dotenv';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: \"mydatabase-f1f0a.firebaseapp.com\",\r\n  databaseURL: \"https://mydatabase-f1f0a.firebaseio.com\",\r\n  projectId: \"mydatabase-f1f0a\",\r\n  storageBucket: \"mydatabase-f1f0a.appspot.com\",\r\n  messagingSenderId: \"1071083294055\",\r\n  appId: \"1:1071083294055:web:26bb4ffb5a805c5474f3c2\",\r\n  measurementId: \"G-W7C97H7EN5\"\r\n};\r\n\r\nconst Firebase = firebase.initializeApp(firebaseConfig);\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const db = Firebase.firestore();\r\nexport const auth = Firebase.auth();","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/extour-backend/expo-service-worker.js', { scope: '/extour-backend/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport LoginScreen from './src/components/Login.js';\n\nexport default function App() {\n  return(\n    <LoginScreen/>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React, { Component } from 'react';\r\nimport { Button, View, Text, TouchableHighlight, StyleSheet, TextInput } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport CollectionsScreen from './Collections.js';\r\nimport ItemsScreen from './Items.js';\r\nimport AddItem from './AddItem.js';\r\nimport EditItem from './Edit.js';\r\nimport { auth } from '../config/ApiKeys';\r\nimport { HeaderBackButton } from '@react-navigation/stack';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons'; \r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default class LoginScreen extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      test: false\r\n    }\r\n  }\r\n\r\n  // handleLogin=(email, password)=>{\r\n  //   try{\r\n  //     auth.signInWithEmailAndPassword(email, password).then(() =>\r\n  //       // this.props.navigation.navigate('Collections')\r\n  //       this.setState({test: true})\r\n  //     )\r\n  //   }\r\n  //   catch(error) {\r\n  //     console.log('error')\r\n  //   }\r\n  // }\r\n\r\n  Login=({navigation})=> {\r\n    return (\r\n      <View style={styles.login}>\r\n        <View>\r\n          <TextInput \r\n            style={styles.textInput}\r\n            placeholder='Username'\r\n            onChangeText={email => this.setState({ email })}\r\n            // value={this.state.email}\r\n          />\r\n          <TextInput \r\n            style={styles.textInput}\r\n            placeholder='Password'\r\n            secureTextEntry={true}\r\n            onChangeText={password => this.setState({ password })}\r\n          />\r\n        </View>\r\n        <View style={styles.button} >\r\n        <Button\r\n          title = 'Log in'\r\n          color = '#75999B'\r\n          onPress = { () => {\r\n            // this.handleLogin(this.state.email, this.state.password)\r\n            try{\r\n              auth.signInWithEmailAndPassword(this.state.email, this.state.password).then(() =>\r\n              navigation.navigate('Collections')\r\n            )\r\n            }\r\n            catch(error){\r\n              console.log(error.message)\r\n            }\r\n          }}\r\n        />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator \r\n          initialRouteName='Login'\r\n          screenOptions={{\r\n            headerShown: true\r\n          }}\r\n        >\r\n          <Stack.Screen\r\n            name = 'Login'\r\n            component={this.Login}\r\n            options = {{\r\n              headerStyle: {\r\n                backgroundColor: '#5B7B87',\r\n              },\r\n              headerTintColor: '#ffff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              }\r\n            }}\r\n          />\r\n          <Stack.Screen\r\n            name = 'Collections'\r\n            component={CollectionsScreen} \r\n            options = { ({navigation}) =>({\r\n              headerStyle: {\r\n                backgroundColor: '#5B7B87',\r\n              },\r\n              headerTintColor: '#ffff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n              headerLeft: null,\r\n              headerRight: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <Text\r\n                    style = {{\r\n                      color: '#ffff',\r\n                      fontWeight: 'bold',\r\n                      marginTop: 5\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Text>\r\n                  <Ionicons \r\n                    name = 'md-exit' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.push('Login')}\r\n                  />\r\n                </View>\r\n              )\r\n            })}\r\n          />\r\n          <Stack.Screen \r\n            name = 'Items'\r\n            component={ItemsScreen}\r\n            options = { ({navigation}) =>({\r\n              headerStyle: {\r\n                backgroundColor: '#5B7B87',\r\n              },\r\n              headerTintColor: '#ffff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n              headerLeft: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <AntDesign \r\n                    name = 'arrowleft' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.navigate('Collections')}\r\n                  />\r\n                </View>\r\n              ),\r\n              headerRight: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <Text\r\n                    style = {{\r\n                      color: '#ffff',\r\n                      fontWeight: 'bold',\r\n                      marginTop: 5\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Text>\r\n                  <Ionicons \r\n                    name = 'md-exit' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.push('Login')}\r\n                  />\r\n                </View>\r\n              )\r\n              // headerRight: ({navigation}) => (\r\n              //   <Button\r\n              //     onPress={() => (this.props.navigation.navigate('AddItem'))}\r\n              //   />\r\n                  \r\n              // )\r\n              // headerRight: () => (\r\n                // <TouchableHightlight\r\n                //   onPress={() => this.props.navigation.goBack()}\r\n                //   // onPress={()=> alert('test')}\r\n                // >\r\n                //   <View style={{ flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                //     <Text style={{ fontWeight: 'bold', fontSize: 17, marginRight: 25, color: '#fff' }}>\r\n                //       Add Item\r\n                //     </Text>\r\n                    // <Icon \r\n                    //   name='plus'\r\n                    //   type='font-awesome'\r\n                    //   // size='85'\r\n                    //   iconStyle={{ width: 20, marginRight: 25 }}\r\n                    //   color='#fff'\r\n                    //   onPress={() => navigation.navigate('AddItem', { collection: 'categories' }) }\r\n                    // />\r\n                //   </View>\r\n                // </TouchableHightlight>\r\n              // )\r\n            })}\r\n          />\r\n          <Stack.Screen\r\n            name = 'AddItem'\r\n            component={AddItem}\r\n            options = { ({navigation}) =>({\r\n              headerStyle: {\r\n                backgroundColor: '#5B7B87',\r\n              },\r\n              headerTintColor: '#ffff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n              headerLeft: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <AntDesign \r\n                    name = 'arrowleft' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.navigate('Items')}\r\n                  />\r\n                </View>\r\n              ),\r\n              headerRight: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <Text\r\n                    style = {{\r\n                      color: '#ffff',\r\n                      fontWeight: 'bold',\r\n                      marginTop: 5\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Text>\r\n                  <Ionicons \r\n                    name = 'md-exit' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.push('Login')}\r\n                  />\r\n                </View>\r\n              )\r\n            })}\r\n          />\r\n          <Stack.Screen\r\n            name = 'EditItem'\r\n            component={EditItem}\r\n            options = { ({navigation}) =>({\r\n              headerStyle: {\r\n                backgroundColor: '#5B7B87',\r\n              },\r\n              headerTintColor: '#ffff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n              headerLeft: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <AntDesign \r\n                    name = 'arrowleft' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.navigate('Items')}\r\n                  />\r\n                </View>\r\n              ),\r\n              headerRight: () => (\r\n                <View style = {{ flexDirection: 'row', marginRight: 25 }}>\r\n                  <Text\r\n                    style = {{\r\n                      color: '#ffff',\r\n                      fontWeight: 'bold',\r\n                      marginTop: 5\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Text>\r\n                  <Ionicons \r\n                    name = 'md-exit' \r\n                    size = {26} \r\n                    style = {{ color: '#ffff', marginLeft: 15 }} \r\n                    // onPress = {() => this.props.navigation.navigate('Login')}/>\r\n                    onPress = {() => navigation.push('Login')}\r\n                  />\r\n                </View>\r\n              )\r\n            })}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  login: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fffff',\r\n  },\r\n  text: {\r\n    // marginTop: '10%',\r\n    marginBottom: '5%',\r\n    fontSize: 28,\r\n  },\r\n  textInput: {\r\n    width: 400,\r\n    textAlign: 'center',\r\n    fontSize: 22,\r\n    backgroundColor: '#fff',\r\n    borderWidth: 0.9,\r\n    marginTop: 5,\r\n    borderRadius: 7\r\n    // marginBottom: 30\r\n  },\r\n  button: {\r\n    width: 100,\r\n    marginTop: 30,\r\n  },\r\n  skip: {\r\n    marginTop: 100,\r\n    textDecorationLine: 'underline',\r\n  }\r\n})","import React, { Component } from 'react';\r\nimport { SafeAreaView, FlatList, Dimensions, StyleSheet, Text, View, Image, TouchableHighlight } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Icon } from 'react-native-elements';\r\nimport { FlatGrid } from 'react-native-super-grid';\r\nimport { withNavigation } from 'react-navigation';\r\n// import Constants from 'expo-constants';\r\n\r\nlet _collections = [\r\n  {\r\n    collection: 'categories'\r\n  },\r\n  {\r\n    collection: 'categoriesGR'\r\n  },\r\n  {\r\n    collection: 'categoriesALB'\r\n  },\r\n  {\r\n    collection: 'places'\r\n  },\r\n  {\r\n    collection: 'placesGR'\r\n  },\r\n  {\r\n    collection: 'placesALB'\r\n  }\r\n]\r\n\r\nexport default class CollectionsScreen extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <View>\r\n        <SafeAreaView>\r\n          <FlatGrid\r\n            itemDimension = {(Dimensions.get('window').width)*0.30}\r\n            items = {_collections}\r\n            fixed = {false}\r\n            renderItem = {({ item }) => (\r\n              <TouchableHighlight onPress = {()=> { this.props.navigation.push('Items', { collection: item.collection } ) }}>\r\n                <View style = {[styles.itemContainer]}>\r\n                  <Text style = {styles.itemName}>{item.collection}</Text>\r\n                </View>\r\n              </TouchableHighlight>\r\n            )}\r\n          />\r\n        </SafeAreaView>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\n// export default withNavigation(CollectionsScreen)\r\n\r\nconst styles = StyleSheet.create({\r\n  itemContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 150,\r\n    backgroundColor: '#75999B',\r\n    borderRadius: 5,\r\n    margin: 20\r\n  },\r\n  itemName: {\r\n    fontFamily: 'sans-serif-condensed',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffff',\r\n    textAlign: 'center'\r\n  }\r\n})","import React, { Component } from 'react';\r\nimport { View, Text, TextInput, StyleSheet,Button, Dimensions, Image, SafeAreaView, FlatList, ScrollView, TouchableHighlight } from 'react-native';\r\nimport { db } from '../config/ApiKeys';\r\nimport { Icon } from 'react-native-elements';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport firebase from 'firebase';\r\nimport { AntDesign } from '@expo/vector-icons'; \r\n\r\nlet _collection = null;\r\nlet myCollection = null;\r\nlet header = [{}];\r\nlet _doc = null;\r\nlet myItem = null;\r\nlet colNum = 0;\r\nconst placesHeader = [{}];\r\nconst categoryHeader = [{}];\r\n\r\nexport default class ItemsScreen extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      records: [],\r\n      property: '',\r\n      trig: 't'\r\n    }\r\n    this.allRecords = [];\r\n    const { collection } = this.props.route.params;\r\n    myCollection = collection;\r\n    if(collection.charAt(0) == 'p'){\r\n      _collection = 'places';\r\n    }\r\n    else{\r\n      _collection = 'categories';\r\n    }\r\n    this.ref = db.collection(collection);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let len = 0;\r\n    // Get the data for places from the data collection\r\n    this.unsubscribe = this.ref.onSnapshot((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        _doc = doc;\r\n        if(Object.keys(_doc.data()).length>len){\r\n          len = Object.keys(_doc.data()).length;\r\n          myItem = doc;\r\n        }\r\n        let count = Object.keys(doc.data()).length + 1;\r\n        (colNum>count)?null:colNum=count;\r\n        var _singleObj = { id: doc.id };\r\n        for(let i = 0; i<Object.keys(_doc.data()).length; i++){\r\n          _singleObj[[Object.keys(doc.data())[i]]] = doc.data()[Object.keys(_doc.data())[i]]\r\n        }\r\n        this.allRecords.push(_singleObj);\r\n      });\r\n      // Adding header objects to header list\r\n      // console.log('MPHKE')\r\n      var singleObj = { id: 'Key' };\r\n      for(let i = 0; i<Object.keys(myItem.data()).length; i++){\r\n        {console.log('THIS.STATE.TRIG: '+this.state.trig)}\r\n        {console.log('LEN: '+Object.keys(myItem.data()).length)}\r\n        {console.log('---> '+Object.keys(_doc.data())[i])}\r\n        (Object.keys(_doc.data())[i]==(undefined||this.state.trig))?console.log('Undefined header'):\r\n        \r\n        singleObj[[Object.keys(_doc.data())[i].toLowerCase()]] = _doc.data()[Object.keys(_doc.data())[i].toLowerCase()]\r\n      };   \r\n      {console.log('oeproeproe: '+this.state.trig)}\r\n      (_collection == 'places')?placesHeader[0] = singleObj:categoryHeader[0] = singleObj\r\n      {(this.state.trig =='t')?\r\n      (_collection == 'places')?header = placesHeader:header = categoryHeader\r\n      :alert('gtxs')}\r\n      // Updating records with all the items of the collection\r\n      this.setState({\r\n        records: this.allRecords,\r\n      })\r\n    });\r\n    // console.log('DID MOUNT')\r\n  }\r\n\r\n  _headers=(_item, itemLength)=>{\r\n    var _headers = [];\r\n    for(let i=0; i<itemLength+1; i++){\r\n      _headers.push(\r\n        <View style = {styles.headerContainer}>\r\n          {/* {console.log('----------------->'+this.state.trig)}\r\n          {(this.state.trig==false)?( */}\r\n          <Text key = {i} numberOfLines={4} \r\n          style = {styles.headerText}>{Object.keys(_item)[i]}</Text>\r\n          {/* ):\r\n          null} */}\r\n          {/* <Icon\r\n            name='times-circle'\r\n            type='font-awesome'\r\n            iconStyle={{ width: 15, marginRight: 15}}\r\n            color='#ffffff' */}\r\n          <AntDesign \r\n            name = 'delete' \r\n            size = {16} \r\n            style = {{ color: '#ffff', marginTop: 5, marginRight: 5 }} \r\n            onPress={() => this.deleteProperty(Object.keys(_item)[i]) }\r\n          />\r\n        </View>\r\n      )      \r\n    }\r\n    return(\r\n      _headers\r\n    )\r\n  }\r\n\r\n  allCategories=(_item, itemLength)=>{\r\n    var _allCategories = [];\r\n    for(let i=0; i<itemLength+1; i++){\r\n      _allCategories.push(\r\n        <View style = {styles.itemContainer}>\r\n          {(Object.values(_item)[i]==undefined)?(\r\n            <Text key = {i} numberOfLines={4} style = {styles.itemText}>{Object.values(_item)[i]}</Text>\r\n            ):(\r\n              (Object.values(_item)[i].search('/')>0)?(\r\n                <View style = {styles.itemText}>\r\n                  <Image style = {{ width: 60, height: 60, margin: 10 }} source={{ uri: Object.values(_item)[i] }} />\r\n                </View>\r\n                ):(\r\n                  <Text key = {i} numberOfLines={4} style = {styles.itemText}>{Object.values(_item)[i]}</Text>\r\n                )\r\n              )\r\n          }\r\n        </View>\r\n      )      \r\n    }\r\n    return(\r\n      _allCategories\r\n    )\r\n  }\r\n\r\n  allPlaces=(_item, itemLength)=>{\r\n    var _allPlaces = [];\r\n    for(let i=0; i<itemLength+1; i++){\r\n      _allPlaces.push(\r\n        <View style = {styles.itemContainer}>\r\n          {(Object.values(_item)[i]==undefined)?(\r\n            // console.log('undefined?: '+'yes')\r\n            null\r\n            ):(\r\n              (Object.keys(_item)[i].substring(0,5)=='image')?(\r\n                <View style = {styles.itemText}>\r\n                  <Image style = {{ width: 100, height: 80, margin: 10 }} source={{ uri: Object.values(_item)[i] }} />\r\n                </View>\r\n              ):(\r\n                  <Text key = {i} numberOfLines={4} style = {styles.itemText}>{Object.values(_item)[i]}</Text>\r\n                )\r\n              )\r\n          }\r\n        </View>\r\n      )      \r\n    }\r\n    return(\r\n      _allPlaces\r\n    )\r\n  }\r\n\r\n  header=()=>{\r\n    var _header = [];\r\n    _header.push(\r\n      <SafeAreaView style = {{ width: 250*colNum }}>\r\n        <FlatList\r\n          data = {header}\r\n          keyExtractor = {(item) => item.id}\r\n          extraData = {header}\r\n          renderItem = {({item})=>{\r\n            return(\r\n              (_collection == 'places')?(\r\n                <View style = {{flexDirection: 'row'}}>\r\n                  {this._headers(item, Object.keys(item).length)}\r\n                </View>\r\n              ):(\r\n                <View style = {{flexDirection: 'row'}}>\r\n                  {this._headers(item, Object.keys(item).length)}\r\n                </View>\r\n              )\r\n            )\r\n          }}\r\n        />\r\n      </SafeAreaView>\r\n    )\r\n    return(\r\n      _header\r\n    )\r\n  }\r\n\r\n  addProperty(){\r\n    let id ='';\r\n    this.unsubscribe = this.ref.onSnapshot((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        {(doc.id==id)?console.log('Same id'):(id=doc.id,\r\n        db.collection(_collection).doc(doc.id).set({\r\n          [this.state.property]: ''}, { merge: true })\r\n        )}\r\n        this.allRecords.push({\r\n          [this.state.property]: doc.data()[this.state.property]\r\n        });\r\n      })\r\n    })\r\n    .then(function() {\r\n      console.log(\"Document successfully updated!\");\r\n      this.setState({\r\n        property: ''      \r\n      });\r\n    })\r\n    .catch(function(error) {\r\n      // The document probably doesn't exist.\r\n      console.error(\"Error updating document: \", error);\r\n      this.setState({\r\n        property: ''\r\n      });\r\n    })\r\n  }\r\n\r\n  deleteProperty = (item) =>{\r\n    this.unsubscribe = this.ref.onSnapshot((querySnapshot)=>{\r\n      querySnapshot.forEach((doc) => {\r\n        db.collection(_collection).doc(doc.id).update({\r\n          [item]: firebase.firestore.FieldValue.delete()\r\n        })\r\n      })\r\n    })\r\n    alert(item+' deleted')\r\n    header=[]\r\n    this.state.trig = item\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    header=null;\r\n    colNum=0;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ScrollView\r\n        horizontal={(250*(colNum+1)>Dimensions.get('window').width)?true:false}\r\n      >\r\n        <ScrollView>\r\n          <TouchableHighlight\r\n            style = {{ height: 60, margin: 20 }}\r\n            onPress = {() => this.props.navigation.push('AddItem', { collection: myCollection, myItem: myItem })}\r\n          >\r\n            <View style = {{ flexDirection: 'row', width: 200, height: 60, alignItems: 'center', justifyContent: 'center', backgroundColor: '#75999B', borderWidth: 1}} >\r\n              {/* <Icon \r\n                name='plus'\r\n                type='font-awesome'\r\n                iconStyle={{ width: 15, marginRight: 15}}\r\n                color='#ffffff'\r\n              /> */}\r\n              <AntDesign \r\n                name = 'plus' \r\n                size = {20} \r\n                style = {{ color: '#ffff', marginLeft: 0 }} \r\n              />\r\n              <Text style = {{ fontSize: 17, fontWeight: 'bold', color: '#ffffff'}}>Add Item</Text>\r\n            </View>\r\n          </TouchableHighlight>\r\n          {/* <Button onPress={()=>(this.setState({trig: true}, this.forceUpdate(),console.log(this.state.trig)))} /> */}\r\n          <View style = {{ flexDirection: 'row', margin: 20, borderLeftWidth: 1 }}>\r\n            <SafeAreaView\r\n              style = {{ width: 250*colNum }}\r\n            >\r\n              <FlatList\r\n                data = {this.state.records}\r\n                keyExtractor = {(item) => item.id}\r\n                extraData = {this.state.records}\r\n                renderItem = {({item})=>{\r\n                return(\r\n                  (_collection == 'places')?(\r\n                    <TouchableOpacity\r\n                      onPress={() => this.props.navigation.push('EditItem', { collection: myCollection, item: item}) }\r\n                      activeOpacity = {0.5}\r\n                    >\r\n                      <View style = {{flexDirection: 'row'}}>\r\n                        {this.allPlaces(item, Object.keys(item).length)}\r\n                        <Icon \r\n                          name='plus'\r\n                          type='font-awesome'\r\n                          iconStyle={{ width: 15, marginRight: 15}}\r\n                          color='#ffffff'\r\n                        />\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  ):\r\n                  (\r\n                    <TouchableOpacity\r\n                    onPress={() => this.props.navigation.push('EditItem', { collection: myCollection, item: item}) }\r\n                    activeOpacity = {0.5}\r\n                  >\r\n                    <View style = {{flexDirection: 'row'}}>\r\n                      {this.allCategories(item, Object.keys(item).length)}\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                  )\r\n                )\r\n                }}\r\n                ListHeaderComponent = {this.header}\r\n              />\r\n            </SafeAreaView>\r\n            <View style = {{ flexDirection: 'row', backgroundColor: 'green', width: 200, height: 60, alignItems: 'center', justifyContent: 'center', borderWidth: 0.1, borderLeftWidth: 0 }} >\r\n              <TextInput \r\n                style = {{ textAlign: 'center', fontFamily: 'sans-serif-condensed', fontSize: 17, fontWeight: 'bold', color: '#ffffff'}}\r\n                placeholder = '+ New Property'\r\n                placeholderTextColor = '#ffffff'\r\n                onChangeText={\r\n                  (text) => \r\n                    this.setState({ property: text })\r\n                }\r\n                onSubmitEditing={() => (\r\n                  this.addProperty()) }\r\n              >\r\n              </TextInput>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </ScrollView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    width: 250,\r\n    height: 60,\r\n    backgroundColor: 'grey',\r\n    borderWidth: 0.1,\r\n    // borderRightWidth: 0,\r\n    borderLeftWidth: 0\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    width: 250,\r\n    fontFamily: 'sans-serif-condensed',\r\n    fontSize: 17,\r\n    fontWeight: 'bold',\r\n    // borderRightWidth: 0.1,\r\n  },  \r\n  itemContainer: {\r\n    flexDirection: 'row',\r\n    height: 100,\r\n    backgroundColor: 'white',\r\n    // borderWidth: 0.1,\r\n    // borderTopWidth: 0\r\n  },\r\n  itemText: {\r\n    // textAlign: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: 250,\r\n    // fontFamily: 'sans-serif-condensed',\r\n    // fontSize: 25,\r\n    borderWidth: 0.1,\r\n    borderTopWidth: 0,\r\n    borderLeftWidth: 0\r\n  }\r\n})","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, Image, ScrollView, Dimensions } from 'react-native';\r\nimport { db } from '../config/ApiKeys';\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nlet _collection = null;\r\nlet _myItem = null;\r\nlet count = null;\r\nlet categoryHeader = [{}];\r\n\r\nexport default class AddItem extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      records: []\r\n    }\r\n    const { collection } = this.props.route.params;\r\n    const { myItem } = this.props.route.params;\r\n    _collection = collection;\r\n    _myItem = myItem;\r\n    this.ref = db.collection(_collection);\r\n    var singleObj = { id: 'Key' };\r\n    let _count = Object.values(_myItem.data()).length+1;\r\n    for(let i = 0; i<Object.keys(_myItem.data()).length; i++){\r\n      singleObj[[Object.keys(_myItem.data())[i].toLowerCase()]] = _myItem.data()[Object.keys(_myItem.data())[i].toLowerCase()]\r\n    };\r\n    categoryHeader[0] = singleObj;\r\n    count = _count;\r\n    for(let i=1; i<count; i++){\r\n      console.log('---> '+'new'+Object.keys(categoryHeader[0])[i]) //.toUpperCase() + Object.keys(categoryHeader[0])[i].slice(1))\r\n      this.state={\r\n        ['new'+Object.keys(categoryHeader[0])[i]]: '',\r\n      }\r\n    }\r\n    // console.log('CONSTRUCTOR');\r\n  }\r\n\r\n  pickImage = async (item) => {\r\n    try {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n      if (!result.cancelled) {\r\n        this.setState({ ['new'+item]: result.uri, show: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  addCategory = () => {\r\n    var _category = [];\r\n    for(let i=1; i<count; i++){\r\n      _category.push(\r\n        <View>\r\n        {(Object.keys(categoryHeader[0])[i]=='icon')?(\r\n          <View>\r\n          <Text style = {styles.inputTitle} >\r\n            {Object.keys(categoryHeader[0])[i]}  \r\n          </Text>\r\n        <TouchableOpacity \r\n          onPress={()=>this.pickImage(Object.keys(categoryHeader[0])[i]) }\r\n        > \r\n          <Text style = {styles.iconPick}>\r\n            {(this.state.show==true)?\r\n            ( <Image style = {{ width: 120, height: 120 }} source={{ uri: \r\n              this.state['new'+Object.keys(categoryHeader[0])[i]] }} />):\r\n              'Upload Icon' }\r\n          </Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n        ):(\r\n          <View>\r\n        <Text style = {styles.inputTitle} >\r\n          {Object.keys(categoryHeader[0])[i]}  \r\n        </Text>\r\n        <TextInput \r\n          style = {styles.inputText}\r\n          placeholder = {Object.keys(categoryHeader[0])[i]}\r\n          onChangeText={\r\n            (text) => {\r\n              this.setState({['new'+Object.keys(categoryHeader[0])[i]]: text})\r\n            }\r\n          }\r\n        >\r\n        </TextInput>\r\n        </View>\r\n        )}\r\n        </View>\r\n      )\r\n    }\r\n    return(\r\n      _category\r\n    )\r\n  }\r\n\r\n  addPlace(){\r\n    var _place = [];\r\n    for(let i=1; i<count; i++){\r\n      _place.push(\r\n        <View>\r\n          {(Object.keys(categoryHeader[0])[i].substring(0,5)=='image')?(\r\n          <View>\r\n          <Text style = {styles.inputTitle} >\r\n            {Object.keys(categoryHeader[0])[i]}  \r\n          </Text>\r\n        <TouchableOpacity \r\n          onPress={()=>this.pickImage(Object.keys(categoryHeader[0])[i]) }\r\n        > \r\n          <Text style = {styles.iconPick}>\r\n            {(this.state.show==true)?\r\n            ( <Image style = {{ width: 120, height: 120 }} source={{ uri: \r\n            this.state['new'+Object.keys(categoryHeader[0])[i]] }} />):\r\n            'Upload Image' }\r\n          </Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n        ):(\r\n          <View>\r\n        <Text style = {styles.inputTitle} >\r\n          {Object.keys(categoryHeader[0])[i]}  \r\n        </Text>\r\n        <TextInput \r\n          style = {styles.inputText}\r\n          placeholder = {Object.keys(categoryHeader[0])[i]}\r\n          onChangeText={\r\n            (text) => {\r\n              this.setState({['new'+Object.keys(categoryHeader[0])[i]]: text})\r\n            }\r\n          }\r\n        >\r\n        </TextInput>\r\n        </View>\r\n        )}\r\n        </View>\r\n      )\r\n    }\r\n    return(\r\n      _place\r\n    )\r\n  }\r\n\r\n  onPressAdd = () => {\r\n    let newItem = {};\r\n    for(let i = 1; i<count; i++){\r\n      {(this.state['new'+Object.keys(categoryHeader[0])[i]]==undefined)?\r\n      this.setState({['new'+Object.keys(categoryHeader[0])[i]]: ''}):\r\n      console.log(Object.keys(categoryHeader[0])[i]+': '+this.state['new'+Object.keys(categoryHeader[0])[i]])\r\n      }\r\n      newItem[[Object.keys(categoryHeader[0])[i]]] = this.state['new'+Object.keys(categoryHeader[0])[i]]\r\n    }        \r\n    this.ref.add(newItem).then((data) => {\r\n      for(let i=1; i<count; i++){\r\n        this.setState({\r\n          [Object.keys(categoryHeader[0])[i]]: ''\r\n        })\r\n      }\r\n      this.props.navigation.push('Items', { collection: _collection } )\r\n    }).catch((error) => {\r\n        console.log('New item wasnt saved')\r\n        for(let i=1; i<count; i++){\r\n          // console.log('---> '+'new'+Object.keys(categoryHeader[0])[i]) //.toUpperCase() + Object.keys(categoryHeader[0])[i].slice(1))\r\n          this.setState({\r\n            [Object.keys(categoryHeader[0])[i]]: ''\r\n          })\r\n        }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    // mhdenismos timvn stis formes\r\n  }\r\n\r\n  render() {\r\n    // console.log('PRIN TO RENDER')\r\n    return(\r\n      (_collection.substring(0,6) == 'places')?(\r\n      <ScrollView style={{ width: Dimensions.get('window').width, marginHorizontal: '10%'}}>\r\n        {this.addPlace()}\r\n        <TouchableOpacity\r\n          style = {styles.addButton}\r\n          onPress={()=> this.onPressAdd() }\r\n        >\r\n          <Text\r\n            style={{fontWeight: 'bold', color: '#fff'}}\r\n          >\r\n            ADD\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n      ):(\r\n      <ScrollView style={{ width: Dimensions.get('window').width, marginHorizontal: '10%'}}>\r\n        {this.addCategory()}\r\n        <TouchableOpacity\r\n          style = {styles.addButton}\r\n          onPress={()=>this.onPressAdd()}\r\n        >\r\n          <Text\r\n            style={{fontWeight: 'bold', color: '#fff'}}\r\n          >\r\n            ADD\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputTitle: {\r\n    fontWeight: 'bold',\r\n    marginVertical: 10\r\n  },\r\n  inputText: {\r\n    height: 40,\r\n    width: 500,\r\n    backgroundColor: '#fff',\r\n    borderWidth: 1,\r\n    marginVertical: 10,\r\n    padding: 10\r\n  },\r\n  imagePick: {\r\n    width: 300,\r\n    height: 175,\r\n    backgroundColor: '#fff',\r\n    borderStyle: 'dashed',\r\n    borderWidth: 1,\r\n    marginVertical: 10,\r\n    padding: 10\r\n  },\r\n  iconPick: {\r\n    textAlign: 'center',\r\n    width: 200,\r\n    height: 200,\r\n    backgroundColor: '#fff',\r\n    borderStyle: 'dashed',\r\n    borderWidth: 1,\r\n    padding: 40,\r\n  },\r\n  addButton: {\r\n    width: 200,\r\n    height: 40,\r\n    backgroundColor: 'green',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginVertical: 10\r\n  }\r\n})","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, Image, ScrollView  } from 'react-native';\r\nimport { db } from '../config/ApiKeys';\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nlet _item = null;\r\nlet _collection = null;\r\nexport default class EditItem extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      records: []\r\n    }\r\n    this.allRecords = [];\r\n    const { collection } = this.props.route.params;\r\n    const { item } = this.props.route.params;\r\n    _collection = collection;\r\n    console.log(collection)\r\n    _item = item;\r\n    console.log(_item.id)\r\n    this.ref = db.collection(collection);\r\n  }\r\n\r\n  pickImage = async (num) => {\r\n    try {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n      if (!result.cancelled) {\r\n        this.setState({[Object.keys(_item)[num]]: result.uri, show: true})\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount(){\r\n    // mhdenismos timvn stis formes\r\n  }\r\n\r\n  myItem(){\r\n    var allItems = [];\r\n    for(let i=1; i<Object.keys(_item).length; i++){\r\n    allItems.push(\r\n      <View>\r\n        {(Object.keys(_item)[i].substring(0,5)==('image')||\r\n        Object.keys(_item)[i].substring(0,4)==('icon'))?(\r\n          <View>\r\n            <Text style = {styles.inputTitle} >\r\n              {Object.keys(_item)[i]}  \r\n            </Text>\r\n            <TouchableOpacity \r\n              style = {{ width: 200, height: 200 }}\r\n              onPress={()=> this.pickImage(i)} >\r\n              <Text style = {styles.iconPick}>\r\n                {(this.state.show==true)?(\r\n                  <Image style = {{ width: 120, height: 120 }} source={{ uri: this.state[Object.keys(_item)[i]] }} />\r\n                ):(\r\n                  <Image style = {{ width: 120, height: 120 }} source={{ uri: Object.values(_item)[i] }} />\r\n                )}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ):(\r\n          <View>\r\n            <Text style = {styles.inputTitle} >\r\n              {Object.keys(_item)[i]}\r\n            </Text>\r\n            <TextInput \r\n              style = {styles.inputText}\r\n              defaultValue = {Object.values(_item)[i]}\r\n              onChangeText={\r\n                (text) => {\r\n                  this.setState({[Object.keys(_item)[i]]: text})\r\n                }\r\n              }\r\n            >\r\n            </TextInput>\r\n          </View>\r\n        )}\r\n      </View>\r\n    )\r\n    }\r\n    return(\r\n      allItems\r\n    )\r\n  }\r\n\r\n  deleteDoc = () =>{\r\n    // console.log('ITEM ID: '+_item.id)\r\n    db.collection(_collection).doc(_item.id).delete().then(function() {\r\n      console.log(\"Document successfully deleted!\");\r\n    }).catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n    })\r\n  }\r\n\r\n  updateDoc = () =>{\r\n    for(let i=1; i<Object.keys(_item).length; i++){\r\n      (this.state[Object.keys(_item)[i]]==undefined)?\r\n      this.setState({\r\n        [Object.keys(_item)[i]]: Object.values(_item)[i]\r\n      })  \r\n      :\r\n      console.log('DEFINED')\r\n      db.collection(_collection).doc(_item.id).update({\r\n        [Object.keys(_item)[i]]: this.state[Object.keys(_item)[i]],\r\n      })\r\n      .then(function() {\r\n        console.log(\"Document successfully updated!\");\r\n        this.setState({\r\n          [Object.keys(_item)[i]]: ''\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        // The document probably doesn't exist.\r\n        console.error(\"Error updating document: \", error);\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <ScrollView style={{ width: Dimensions.get('window').width, marginLeft: '10%'}}>\r\n        {this.myItem()}\r\n        <View style={{flexDirection: 'row'}}>\r\n          <TouchableOpacity\r\n            style = {styles.addButton}\r\n            onPress={()=> (this.updateDoc(), \r\n              this.props.navigation.push('Items', { collection: _collection } )\r\n            )}\r\n          >\r\n            <Text\r\n              style={{fontWeight: 'bold', color: '#fff'}}\r\n            >\r\n              SAVE\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style = {{width: 200,\r\n              height: 40,\r\n              backgroundColor: 'red',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              marginVertical: 10,\r\n              marginLeft: 10}}\r\n              onPress={()=> (this.deleteDoc(), this.props.navigation.push('Items', { collection: _collection } )) }\r\n          >\r\n            <Text\r\n              style={{fontWeight: 'bold', color: '#fff'}}\r\n            >\r\n              DELETE\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>  \r\n      </ScrollView>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputTitle: {\r\n      fontWeight: 'bold',\r\n      marginVertical: 10\r\n    },\r\n    inputText: {\r\n      height: 40,\r\n      width: 500,\r\n      backgroundColor: '#fff',\r\n      borderWidth: 1,\r\n      marginVertical: 10,\r\n      padding: 10\r\n    },\r\n    inputTextDsc: {\r\n      height: 150,\r\n      width: 500,\r\n      backgroundColor: '#fff',\r\n      borderWidth: 1,\r\n      marginVertical: 10,\r\n      padding: 10\r\n    },\r\n    imagePick: {\r\n    //   textAlignVertical: 'center',\r\n      width: 300,\r\n      height: 175,\r\n      backgroundColor: '#fff',\r\n      borderStyle: 'dashed',\r\n      borderWidth: 1,\r\n      marginVertical: 10,\r\n      padding: 10\r\n    },\r\n    iconPick: {\r\n      // textAlign: 'center',\r\n      // textAlignVertical: 'bottom',\r\n      width: 200,\r\n      height: 200,\r\n      backgroundColor: '#fff',\r\n      borderStyle: 'dashed',\r\n      borderWidth: 1,\r\n      padding: 40,\r\n    },\r\n    addButton: {\r\n      width: 200,\r\n      height: 40,\r\n      backgroundColor: 'green',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      marginVertical: 10\r\n    }\r\n  })"],"sourceRoot":""}